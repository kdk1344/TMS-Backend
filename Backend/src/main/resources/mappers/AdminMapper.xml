<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- user-mapper.xml -->
<mapper namespace="com.tms.backend.mapper.AdminMapper">
    <insert id="insert" parameterType="User">
		INSERT INTO users (USER_ID, USER_NAME, PASSWORD, AUTHORITY_CODE, AUTHORITY_NAME)
		VALUES(#{userID}, #{userName}, #{password}, 
		CASE 
            WHEN #{authorityName} = 'type1' THEN 1
            WHEN #{authorityName} = 'type2' THEN 2
            WHEN #{authorityName} = 'type3' THEN 3
            ELSE 0
        END,
        #{authorityName})
	</insert>
	<insert id="insertUser" parameterType="User">
        INSERT INTO users (USER_ID, USER_NAME, PASSWORD, AUTHORITY_CODE, AUTHORITY_NAME)
        VALUES (#{userID}, #{userName}, #{password},#{authorityCode}, #{authorityName})
    </insert>
    
    <update id="updateUser" parameterType="User">
        UPDATE users
        SET userName = #{user.userName},
            Password = #{user.password},
            authorityName = #{user.authorityName},
            authorityCode = CASE 
                          WHEN #{user.authorityName} = 'type1' THEN 1
                          WHEN #{user.authorityName} = 'type2' THEN 2
                          WHEN #{user.authorityName} = 'type3' THEN 3
                          ELSE 0
                      END
        WHERE UserID = #{user.userID}
    </update>
    
    <delete id="deleteUser" parameterType="String">
        DELETE FROM Users
        WHERE USER_ID IN
        <foreach item="id" index="index" collection="array"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <select id="findAll" resultType="User" parameterType="Criteria">
        SELECT USER_ID as userId, USER_NAME as userName, AUTHORITY_NAME as authorityName
        FROM users
        WHERE 1=1
        <if test="userName != null and userName != ''">
            AND USER_NAME LIKE CONCAT('%', #{userName}, '%')
        </if>
        <if test="authorityName != null and authorityName != ''">
            AND AUTHORITY_NAME = #{authorityName}
        </if>
        ORDER BY USER_ID
        LIMIT #{pageStart}, #{perPageNum}
    </select>

    <select id="countUsers" resultType="int">
        SELECT COUNT(*)
        FROM Users
        WHERE 1=1
        <if test="userName != null and userName != ''">
            AND USER_NAME LIKE CONCAT('%', #{userName}, '%')
        </if>
        <if test="authorityName != null and authorityName != ''">
            AND AUTHORITY_NAME = #{authorityName}
        </if>
    </select>
    
    <resultMap id="noticeResultMap" type="Notice">
        <id property="seq" column="SEQ" />
        <result property="postDate" column="POST_DATE" />
        <result property="title" column="TITLE" />
        <result property="content" column="CONTENT" />
        <result property="createdDate" column="CREATED_DATE" />
        <result property="lastModifiedDate" column="LAST_MODIFIED_DATE" />
    </resultMap>

    <select id="getAllNotices" resultMap="noticeResultMap">
        SELECT * FROM notices
    </select>

    <select id="getNoticeById" parameterType="long" resultMap="noticeResultMap">
        SELECT * FROM notices WHERE SEQ = #{id}
    </select>

    <insert id="insertNotice" parameterType="Notice">
        <selectKey keyProperty="seq" order="BEFORE" resultType="long">
            SELECT nextval('notice_seq')
        </selectKey>
        INSERT INTO notices (SEQ, POST_DATE, TITLE, CONTENT, CREATED_DATE, LAST_MODIFIED_DATE)
        VALUES (#{seq}, #{postDate}, #{title}, #{content}, NOW(), NOW())
    </insert>

    <update id="updateNotice" parameterType="Notice">
        UPDATE notices
        SET POST_DATE = #{postDate}, TITLE = #{title}, CONTENT = #{content}, LAST_MODIFIED_DATE = NOW()
        WHERE SEQ = #{seq}
    </update>

    <delete id="deleteNotice" parameterType="long">
        DELETE FROM notices WHERE SEQ = #{id}
    </delete>


	
</mapper>